pipeline {
    tools {
        maven 'M2_HOME'
    }
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/classdevop/springboot-app-for-aks.git']]])
            }
        }
        stage('Build Jar') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Build docker image'){
            steps{
                script{
                    sh 'docker build -t pallavikr/hi:latest .'
                }
            }
        }
        stage('Push Docker Image to ECR') {
            steps {
                withAWS(credentials: 'AWS-Creds', region: 'ap-south-1') {
                    sh 'aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin <test>'
                    sh 'docker tag <pallavikr/hi>:latest <150440053956.dkr.ecr.ap-south-1.amazonaws.com/test>/<pallavikr/hi>:latest'
                    sh 'docker push <150440053956.dkr.ecr.ap-south-1.amazonaws.com/test>/<pallavikr/hi>:latest'
                }
            }
        }
        stage('Integrate Jenkins with EKS Cluster and Deploy App') {
            steps {
                withAWS(credentials: '<AWS-Creds>', region: '<ap-south-1>') {
                  script {
                    sh ('aws eks update-kubeconfig --name <test> --region <ap-south-1>')
                    sh "kubectl apply -f <deploy.yml>.yaml"
                }
                }
        }
    }
    }
}
